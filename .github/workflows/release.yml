name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: macos-latest
    permissions:
      contents: write
    
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      arm64_sha: ${{ steps.checksums.outputs.arm64_sha }}
      x64_sha: ${{ steps.checksums.outputs.x64_sha }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Install dependencies
        run: bun install

      - name: Build binaries
        run: |
          mkdir -p dist
          
          echo "Building for ARM64 (Apple Silicon)..."
          bun build ./src/cli.ts --compile --outfile dist/halo-darwin-arm64 --target=bun-darwin-arm64
          
          echo "Building for x64 (Intel)..."
          bun build ./src/cli.ts --compile --outfile dist/halo-darwin-x64 --target=bun-darwin-x64
          
          chmod +x dist/halo-darwin-*
          ls -lh dist/

      - name: Calculate checksums
        id: checksums
        run: |
          ARM64_SHA=$(shasum -a 256 dist/halo-darwin-arm64 | cut -d' ' -f1)
          X64_SHA=$(shasum -a 256 dist/halo-darwin-x64 | cut -d' ' -f1)
          
          echo "arm64_sha=$ARM64_SHA" >> $GITHUB_OUTPUT
          echo "x64_sha=$X64_SHA" >> $GITHUB_OUTPUT
          
          echo "ARM64 SHA256: $ARM64_SHA"
          echo "x64 SHA256: $X64_SHA"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/halo-darwin-arm64
            dist/halo-darwin-x64
          body: |
            ## Halo v${{ steps.get_version.outputs.version }}
            
            Local DNS and SSL management tool for development
            
            ### Installation
            
            **Via Homebrew:**
            ```bash
            brew install freedomforeversolar/tools/halo
            ```
            
            **Manual Installation:**
            Download the appropriate binary for your system:
            - Apple Silicon (M1/M2/M3): `halo-darwin-arm64`
            - Intel Mac: `halo-darwin-x64`
            
            Then:
            ```bash
            chmod +x halo-darwin-*
            sudo mv halo-darwin-* /usr/local/bin/halo
            ```
            
            ### Checksums
            
            - ARM64: `${{ steps.checksums.outputs.arm64_sha }}`
            - x64: `${{ steps.checksums.outputs.x64_sha }}`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout homebrew-tools repository
        uses: actions/checkout@v4
        with:
          repository: FreedomForeverSolar/homebrew-tools
          token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          ref: main

      - name: Update Homebrew formula
        run: |
          VERSION="${{ needs.build-and-release.outputs.version }}"
          ARM64_SHA="${{ needs.build-and-release.outputs.arm64_sha }}"
          X64_SHA="${{ needs.build-and-release.outputs.x64_sha }}"
          
          mkdir -p Formula
          
          cat > Formula/halo.rb << 'EOF'
          # Homebrew Formula for Halo
          # Auto-generated by GitHub Actions
          
          class Halo < Formula
            desc "Local DNS and SSL management tool for development"
            homepage "https://github.com/freedomforeversolar/halo"
            version "VERSION_PLACEHOLDER"
            license "MIT"
          
            # Different URLs for different architectures
            on_arm do
              url "https://github.com/freedomforeversolar/halo/releases/download/vVERSION_PLACEHOLDER/halo-darwin-arm64"
              sha256 "ARM64_SHA_PLACEHOLDER"
            end
          
            on_intel do
              url "https://github.com/freedomforeversolar/halo/releases/download/vVERSION_PLACEHOLDER/halo-darwin-x64"
              sha256 "X64_SHA_PLACEHOLDER"
            end
          
            depends_on "caddy"
            depends_on "dnsmasq"
          
            def install
              # The downloaded file is already a compiled executable
              bin.install "halo-darwin-#{Hardware::CPU.arch}" => "halo"
            end
          
            def post_install
              # Ensure dnsmasq is started
              system "brew", "services", "start", "dnsmasq" unless system("brew services list | grep dnsmasq | grep started")
            end
          
            def caveats
              <<~EOS
                🔵 Halo has been installed!
                
                To complete setup, run:
                  halo setup
          
                This will configure DNS and SSL certificates for local development.
                
                Quick start:
                  halo setup
                  halo add portal.myapp localhost:3000
                  open https://portal.myapp
              EOS
            end
          
            test do
              assert_match "VERSION_PLACEHOLDER", shell_output("#{bin}/halo --version")
            end
          end
          EOF
          
          # Replace placeholders
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" Formula/halo.rb
          sed -i "s/ARM64_SHA_PLACEHOLDER/$ARM64_SHA/g" Formula/halo.rb
          sed -i "s/X64_SHA_PLACEHOLDER/$X64_SHA/g" Formula/halo.rb
          
          echo "Updated Formula/halo.rb to version $VERSION"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes
        run: |
          VERSION="${{ needs.build-and-release.outputs.version }}"
          git add Formula/halo.rb
          git commit -m "Update halo to v$VERSION"
          git push origin main
          echo "Pushed Homebrew formula update for v$VERSION"

      - name: Summary
        run: |
          echo "## Homebrew Formula Updated! 🍺" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ needs.build-and-release.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** FreedomForeverSolar/homebrew-tools" >> $GITHUB_STEP_SUMMARY
          echo "- **Formula:** Formula/halo.rb" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Users can now install with:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "brew install freedomforeversolar/tools/halo" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
